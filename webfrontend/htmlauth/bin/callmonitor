#!/usr/bin/perl

STDOUT->autoflush(1);

use Config::Simple;
use IO::Socket;
use LWP::UserAgent;
use Time::HiRes;
use MIME::Base64;
use LoxBerry::System;
use LoxBerry::JSON;
use LoxBerry::IO;
use strict;
 
our $psubfolder = "REPLACELBPPLUGINDIR";
my $home = "REPLACELBHOMEDIR";		
my $cfg = new Config::Simple("$home/config/system/general.cfg");
my $pcfg = new Config::Simple("$home/config/plugins/$psubfolder/fritzlox.conf");
my $FRITZBOX=$pcfg->param("general.FritzboxIP");
my $FBLogin=$pcfg->param("general.FBLogin");
my $FBPass=$pcfg->param("general.FBPass");
my $FBusePhonebook=$pcfg->param("general.FBusePhonebook");
my $PBID=$pcfg->param("general.Phonebook");
my $datum;
my $Command;
my $ConnID;
my $Caller;
my $Recipient;
my $Line;
my $extension;
my $duration;
my $Debug;
my $count;
my $Name;
#my $mqttplugin;
my $mqttconn;
my $mqtt;
my $mqttsock;

my $ua = LWP::UserAgent->new;

$Debug = 1;
 
#sub isMQTT {
#	$mqttplugin = LoxBerry::System::plugindata("mqttgateway");
#	if ($mqttplugin) {
#		$mqtt = $lbhomedir."/config/plugins/".$mqttplugin->{"PLUGINDB_FOLDER"}."/mqtt.json";
#		my $jsonobj = LoxBerry::JSON->new();
#		$mqttplugin = $jsonobj->open(filename => $mqtt);
#		$mqtt = $mqttplugin->{"Main"}{"udpinport"};
#		$mqtt = `netstat -ul | grep $mqtt`;
#		if ($mqtt) {
#			$mqtt = -1;
#		} else{
#			$mqtt = 0;
#		}
#		return $mqtt;
#	}
#}

sub isMQTT {
	$mqttconn = LoxBerry::IO::mqtt_connectiondetails();
	if ($mqttconn) {
		$mqtt = `netstat -ul | grep $mqttconn->{"udpinport"}`;
		if ($mqtt) {
			$mqtt = -1;
		} else {
			$mqtt =  0;
		}
		return $mqtt;
	}
}

sub senddata {
	my $txudp = shift;
	my $txCaller = shift;
	my $txRecipient = shift;
	my $ConnID = shift;
	my $MiniServer;
	my $MSPort;
	my $MSenabled;
	my $MSWebPort;
	my $MSUser;
	my $MSPass;
	my $MSName;
	my $req;
	
	unless( defined($ConnID) or length($txudp) ){
		if ($Debug !=0) {print "Parameterfehler -> es werden keine Daten gesendet";}
	} else {
		for (my $i = 1; $i <= $cfg->param('BASE.MINISERVERS');$i++) {
			$MSenabled = $pcfg->param("MINISERVER$i.SendData");
			if (length($MSenabled) == 0) {$MSenabled = 0;}
			if ($MSenabled == 1) {
				$MiniServer=$cfg->param("MINISERVER$i.IPADDRESS");
				$MSPort=$pcfg->param("MINISERVER$i.UDPPort");
				if (length($MSPort) == 0) {$MSPort = 7000;}
				$MSWebPort=$cfg->param("MINISERVER$i.PORT");
				$MSUser=$cfg->param("MINISERVER$i.ADMIN");
				$MSPass=$cfg->param("MINISERVER$i.PASS");
				$MSName=$cfg->param("MINISERVER$i.NAME");
				if ($Debug > 1) {print "Daten an MiniServer $MSName-$MiniServer:$MSPort senden.\n";}
				my $mssock = new IO::Socket::INET (
				PeerAddr => $MiniServer,
				PeerPort => $MSPort,
				Proto => 'udp',
				Type => SOCK_DGRAM
				);
				if ($mssock) {
					if ($txCaller ne "-") {
						if (length($txCaller) == 0) {$txCaller = "anonym";}
						if ($Debug != 0) {print "Caller ($txCaller) auf Leitung $ConnID an $MSName senden.\n";}
						$req = $ua->get("http://$MSUser:$MSPass\@$MiniServer:$MSWebPort/dev/sps/io/CMCaller$ConnID/$txCaller");
						if ($Debug > 1) {printf "%s\n", $req->content;}
					}
					if ($txRecipient ne "-") {
						if ($Debug !=0) {print "Recipient ($txRecipient) auf Leitung $ConnID an $MSName senden.\n";}
						$req = $ua->get("http://$MSUser:$MSPass\@$MiniServer:$MSWebPort/dev/sps/io/CMRec$ConnID/$txRecipient");
						if ($Debug > 1) {printf "%s\n", $req->content;}
					}
					$mssock->send($txudp);
					$mssock->close();
					Time::HiRes::sleep(0.5);
					if ($Debug > 1) {print "Impuls senden\n";}
					$req = $ua->get("http://$MSUser:$MSPass\@$MiniServer:$MSWebPort/dev/sps/io/CMImp/Pulse");
					if ($Debug > 1) {print "Impuls gesendet\n";}
				} else {
					if ($Debug !=0) {print "keine UDP-Verbindung zu $MiniServer:$MSPort.\n";}
				}
				undef($mssock);
			}
		}
	}
}

sub sendMQTT {
	my $topic = shift;
	my $value = shift;
	if (length($topic) != 0 && length($value) !=0) {
   	if (isMQTT()) {
   		my $mqttsock = new IO::Socket::INET (
   			PeerAddr => "127.0.0.1",
   			PeerPort => $mqttplugin->{"Main"}{"udpinport"},
   			Proto => 'udp',
   			Type => SOCK_DGRAM
   		);
   		my $pretopic = "fritzlox/callmonitor/";
   		$mqttsock->send("$pretopic$topic $value");
   		$mqttsock->close();
   		undef($mqttsock);
   	}
   }
}

my $sock;

if ( $FRITZBOX eq "" ) {
	my $gw = `netstat -nr`;
	$gw =~ m/0.0.0.0\s+([0-9]+.[0-9]+.[0-9]+.[0-9]+)/g;
	$FRITZBOX = $1;
}

if ( $FBLogin eq "" ) { $FBLogin = "1"; }
if ( $FBPass eq "" ) { $FBPass = "1"; }
if ( $PBID eq "" ) { $PBID = "0"; }

do {

	if (!$sock) {
		print "keine Verbindung zur Fritzbox -> Verbindung aufbauen\n";
		$sock = new IO::Socket::INET (
						PeerAddr => $FRITZBOX,
						PeerPort => '1012',
						Proto => 'tcp',
						Blocking => 0,
						Timeout => 60,
        		);
        		#die "Could not create socket: $!\n" unless $sock;
	}
	
	
	while(<$sock>) {
		if ($Debug > 1) {printf "%s",$_;}
		if ($_ =~ /RING/){
			($datum,$Command,$ConnID,$Caller,$Recipient,$Line) = split(";", $_);
			$Recipient =~ s/#//g;
			$Caller =~ s/#//g;
			sendMQTT("$ConnID/event", "ring");
			sendMQTT("$ConnID/recipient", $Recipient);
			if ($Debug != 0 ) {print "Eingehender Anruf auf Leitung $ConnID.\n";}
			if ($FBusePhonebook) {
				if ($Debug != 0) {print "Anrufer auf Leitung $ConnID ermitteln.\n";}
				$Name = qx(./FBPBgetName $Caller $FBLogin $FBPass $FRITZBOX $PBID);
				if (length($Name) > 0) {
					if ($Debug != 0) {print "$Name auf Leitung $ConnID.\n";}
					sendMQTT("$ConnID/caller", $Name);
					senddata("$datum;callmonitor;$ConnID;$Caller;$Recipient;$Line;0;1;0",$Name,$Recipient,$ConnID);
				} else {
					sendMQTT("$ConnID/caller", $Caller);
					senddata("$datum;callmonitor;$ConnID;$Caller;$Recipient;$Line;0;1;0",$Caller,$Recipient,$ConnID);
				}
			} else {
				sendMQTT("$ConnID/caller", $Caller);
				senddata("$datum;callmonitor;$ConnID;$Caller;$Recipient;$Line;0;1;0",$Caller,$Recipient,$ConnID);
			}
		} elsif ($_ =~ /CALL/){
			($datum,$Command,$ConnID,$extension,$Caller,$Recipient,$Line) = split(";", $_);
			$Recipient =~ s/#//g;
			$Caller =~ s/#//g;
			sendMQTT("$ConnID/event", "call");
			sendMQTT("$ConnID/caller", $Caller);
			if ($Debug !=0 ) {print "Ausgehender Anruf auf Leitung $ConnID.\n";}
			if ($FBusePhonebook) {
				if ($Debug != 0) {print "Angerufener auf Leitung $ConnID ermitteln.\n";}
				$Name = qx(./FBPBgetName $Recipient $FBLogin $FBPass $FRITZBOX $PBID);
				if (length($Name) > 0) {
					if ($Debug != 0) {print "$Name auf Leitung $ConnID.\n";}
					sendMQTT("$ConnID/recipient", $Name);
					senddata("$datum;callmonitor;$ConnID;$Caller;$Recipient;$Line;$extension;3;0",$Caller,$Name,$ConnID);
				} else {
					sendMQTT("$ConnID/recipient", $Recipient);
					senddata("$datum;callmonitor;$ConnID;$Caller;$Recipient;$Line;$extension;3;0",$Caller,$Recipient,$ConnID);
				}
			} else {
				sendMQTT("$ConnID/recipient", $Recipient);
				senddata("$datum;callmonitor;$ConnID;$Caller;$Recipient;$Line;$extension;3;0",$Caller,$Recipient,$ConnID);
			}
		} elsif ($_ =~ /;CONNECT/){
			($datum,$Command,$ConnID,$extension,$Caller) = split(";", $_);
			$Caller =~ s/#//g;
			sendMQTT("$ConnID/event", "connect");
			if ($Debug != 0 ) {print "Verbindung auf Leitung $ConnID verbunden.\n";}
			senddata("$datum;callmonitor;$ConnID;$Caller;0;0;$extension;2;0","-","-",$ConnID);
		} elsif ($_ =~ /DISCONNECT/){
			($datum,$Command,$ConnID,$duration) = split(";", $_);
			sendMQTT("$ConnID/event", "disconnect");
			sendMQTT("$ConnID/duration", $duration);
			if ($Debug != 0 ) {print "Verbindung auf Leitung $ConnID beendet.\n";}
			senddata("$datum;callmonitor;$ConnID;0;0;0;0;4;$duration","-","-",$ConnID);
		}
		Time::HiRes::sleep(0.5); #.1 seconds
	}
	if (!$sock) {
		Time::HiRes::sleep(30);
	} elsif (!$sock->connected()) {
		print "Verbindung abgebrochen.";
		Time::HiRes::sleep(0.5);
	} else {
		if ($count >= 120) {
			#print "Connectiontest\n";
			$count = 0;
			#$sock->send("");
		} else {
			$count ++;
		}
		Time::HiRes::sleep(0.5);
	}
} while ( 1 );
undef($datum);
undef($Command);
undef($ConnID);
undef($Caller);
undef($Recipient);
undef($extension);undef($duration);
undef($Line);
undef($FRITZBOX);
undef($cfg);
undef($pcfg);
undef($home);
undef($psubfolder);
